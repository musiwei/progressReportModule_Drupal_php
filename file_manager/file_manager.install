<?php

/**
 * @file
 * Install file for Node Example module.
 *
 * The definition of the fields for the module is here,
 *
 * @see http://drupal.org/node/707832
 * @see http://drupal.org/node/443536
 * @see field
 */

/**
 * Implements hook_install().
 */
function file_manager_install() {
  // During installation, the t() function is unavailable, so we use get_t()
  // to store the name of the translation function.
  $t = get_t();
  /**  Set the defaul publishing option
    *  Publishing options (core functional)
    *  ------------------------------------
    *
    *  Default options
    *    node_options_{$type}
    *    value <array>:
    *      array('status', 'promote', 'sticky', 'revision')
    */
  variable_set('node_options_resource', array('status'));       // set resource node default option as published.
  
  $resource = array(
    'type' => 'resource',
    'name' => $t('Resource'),
    // 'base' tells Drupal the base string for hook functions.
    // This is often the module name; if base is set to 'mymodule', Drupal
    // would call mymodule_insert() or similar for node hooks.
    // In this case, we set base equal to 'node_content' so Drupal will handle
    // our node as if we had designed it in the UI.
    'base' => 'node_content',
    'description' => $t('This is a single resource(a file) that can be assigned to a particular project.'),
    'title_label' => $t('Resource name'),
	'custom' => TRUE,
  );

  $content_type = node_type_set_defaults($resource);
  node_type_save($content_type);

  foreach (_resource_installed_fields() as $field) {
    field_create_field($field);
  }

  foreach (_resource_installed_instances() as $instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = $resource['type'];
    field_create_instance($instance);
  }
}

/**
 * Implements hook_uninstall().
 */
function file_manager_uninstall() {
    _uninstall_resource();
}

function _uninstall_resource(){
    // Gather all the example content that might have been created while this
  // module was enabled.  Simple selects still use db_query().
  // http://api.drupal.org/api/function/db_query/7
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => 'resource'));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  // Delete all the nodes at once
  // http://api.drupal.org/api/function/node_delete_multiple/7
  node_delete_multiple($nids);

  // Loop over each of the fields defined by this module and delete
  // all instances of the field, their data, and the field itself.
  // http://api.drupal.org/api/function/field_delete_field/7
  foreach (array_keys(_resource_installed_fields()) as $field) {
    field_delete_field($field);
  }

  // Loop over any remaining field instances attached to the progress_report
  // content type (such as the body field) and delete them individually.
  // http://api.drupal.org/api/function/field_delete_field/7
  $instances = field_info_instances('node', 'resource');
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }

  // Delete our content type
  // http://api.drupal.org/api/function/node_type_delete/7
  node_type_delete('resource');

  // Purge all field infromation
  // http://api.drupal.org/api/function/field_purge_batch/7
  field_purge_batch(1000);
}

//field setings
function _resource_installed_fields() {
  $t = get_t();
  return array(
    'resource_pid' => array(
      'field_name'  => 'resource_pid',
      'cardinality' => 1,
      'type'        => 'list_integer',
    ),
    'resource_file' => array(
      'field_name'  => 'resource_file',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'type'        => 'file',
      'settings' => array(
          'uri_scheme' => 'private',
      ),
    ),
  );
}

// field instance settings
function _resource_installed_instances() {
  $t = get_t();
  return array(
    'resource_pid' => array(
      'field_name'  => 'resource_pid',
      'label' => $t('Project name'),
      'type'        => 'list_integer',
      'required' => TRUE,
      'widget'      => array(
        'type'    => 'options_select',
        'weight' => -1,
      ),
      'display' => array(
        'resource_list' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    'resource_file' => array(
      'field_name'  => 'resource_file',
      'label' => $t('Upload file'),
      'type'        => 'file',
      'required' => TRUE,
      'settings' => array(
          'file_directory' => 'file_manager',
          'file_extensions' => 'zip rar jpg jpeg gif bmp png txt doc docx xls xlsx pdf ppt pptx pps odt ods odp',
      ),
      'widget'      => array(
        'type'    => 'file_mupload',// here we define the type as 'file_mupload', an external widget type from other modules. 
                                    // You may want to install Mupload and Plupload module to get the amazing experience: 
                                    // 1. Drag-and-drop a file into the browser! 
                                    // 2. Upload multiple files one time!  
                                    // If these two modules are not installed, this type will be automatically corrected to 'file_generic', 
                                    // since this line exists in 'file.field.inc': 'default_widget' => 'file_generic',
                                    // so there has nothing to worry about.
                                    // 
                                    // Mupload: http://drupal.org/sandbox/vingborg/1138512
                                    // Plupload: http://drupal.org/project/plupload
                                    // Plupload library: http://www.plupload.com/download.php
                                    // Step by step installation guideline: http://drupal.org/node/1143634 refer to #8, Posted by daco on August 30, 2011 at 5:52pm
        'weight' => -1,
      ),
      'display' => array(
        'resource_list' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
  );
}
